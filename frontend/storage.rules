rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // ===== REGRAS DE PERFIL DO USUÁRIO =====
    match /users/{userId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB max
        request.resource.contentType.matches('image/.*');
    }



    // ===== REGRAS DE AVATARES =====
    match /avatars/{userId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB max
        request.resource.contentType.matches('image/.*');
    }

    // ===== REGRAS DE POSTS =====
    match /posts/{postId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.resource.size < 10 * 1024 * 1024 && // 10MB max
        (request.resource.contentType.matches('image/.*') ||
         request.resource.contentType.matches('video/.*'));
    }

    // ===== REGRAS DE GRUPOS =====
    match /groups/{groupId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.resource.size < 5 * 1024 * 1024 && // 5MB max
        request.resource.contentType.matches('image/.*');
    }

    // ===== REGRAS DE DOCUMENTOS =====
    match /documents/{userId}/{fileName} {
      allow read: if request.auth != null && 
        request.auth.uid == userId;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 25 * 1024 * 1024 && // 25MB max
        (request.resource.contentType.matches('application/pdf') ||
         request.resource.contentType.matches('application/msword') ||
         request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
         request.resource.contentType.matches('text/.*'));
    }

    // ===== REGRAS DE TEMPORÁRIOS =====
    match /temp/{userId}/{fileName} {
      allow read: if request.auth != null && 
        request.auth.uid == userId;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 50 * 1024 * 1024; // 50MB max
    }

    // ===== REGRAS DE ADMIN =====
    match /admin/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }

    // ===== REGRAS PADRÃO =====
    match /{allPaths=**} {
      allow read, write: if false; // Negar acesso a todos os outros arquivos
    }
  }
}
